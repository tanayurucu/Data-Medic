// Generated by https://quicktype.io

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace DataMedic.Infrastructure.Portainer;

public partial class PortainerHostResponse
{
    [JsonProperty("Id")]
    public long Id { get; set; }

    [JsonProperty("Name")]
    public string Name { get; set; }

    [JsonProperty("Type")]
    public long Type { get; set; }

    [JsonProperty("URL")]
    public string Url { get; set; }

    [JsonProperty("GroupId")]
    public long GroupId { get; set; }

    [JsonProperty("PublicURL")]
    public string PublicUrl { get; set; }

    [JsonProperty("TLSConfig")]
    public TlsConfig TlsConfig { get; set; }

    [JsonProperty("Extensions")]
    public object[] Extensions { get; set; }

    [JsonProperty("AzureCredentials")]
    public AzureCredentials AzureCredentials { get; set; }

    [JsonProperty("TagIds")]
    public object[] TagIds { get; set; }

    [JsonProperty("Status")]
    public long Status { get; set; }

    [JsonProperty("Snapshots")]
    public Snapshot[] Snapshots { get; set; }

    [JsonProperty("UserAccessPolicies")]
    public AccessPolicies UserAccessPolicies { get; set; }

    [JsonProperty("TeamAccessPolicies")]
    public AccessPolicies TeamAccessPolicies { get; set; }

    [JsonProperty("EdgeKey")]
    public string EdgeKey { get; set; }

    [JsonProperty("EdgeCheckinInterval")]
    public long EdgeCheckinInterval { get; set; }

    [JsonProperty("Kubernetes")]
    public Kubernetes Kubernetes { get; set; }

    [JsonProperty("ComposeSyntaxMaxVersion")]
    public string ComposeSyntaxMaxVersion { get; set; }

    [JsonProperty("SecuritySettings")]
    public SecuritySettings SecuritySettings { get; set; }

    [JsonProperty("LastCheckInDate")]
    public long LastCheckInDate { get; set; }

    [JsonProperty("IsEdgeDevice")]
    public bool IsEdgeDevice { get; set; }

    [JsonProperty("UserTrusted")]
    public bool UserTrusted { get; set; }

    [JsonProperty("AuthorizedUsers")]
    public object AuthorizedUsers { get; set; }

    [JsonProperty("AuthorizedTeams")]
    public object AuthorizedTeams { get; set; }

    [JsonProperty("Tags")]
    public object Tags { get; set; }
}

public partial class AzureCredentials
{
    [JsonProperty("ApplicationID")]
    public string ApplicationId { get; set; }

    [JsonProperty("TenantID")]
    public string TenantId { get; set; }

    [JsonProperty("AuthenticationKey")]
    public string AuthenticationKey { get; set; }
}

public partial class Kubernetes
{
    [JsonProperty("Snapshots")]
    public object[] Snapshots { get; set; }

    [JsonProperty("Configuration")]
    public Configuration Configuration { get; set; }
}

public partial class Configuration
{
    [JsonProperty("UseLoadBalancer")]
    public bool UseLoadBalancer { get; set; }

    [JsonProperty("UseServerMetrics")]
    public bool UseServerMetrics { get; set; }

    [JsonProperty("StorageClasses")]
    public object[] StorageClasses { get; set; }

    [JsonProperty("IngressClasses")]
    public object[] IngressClasses { get; set; }

    [JsonProperty("RestrictDefaultNamespace")]
    public bool RestrictDefaultNamespace { get; set; }
}

public partial class SecuritySettings
{
    [JsonProperty("allowBindMountsForRegularUsers")]
    public bool AllowBindMountsForRegularUsers { get; set; }

    [JsonProperty("allowPrivilegedModeForRegularUsers")]
    public bool AllowPrivilegedModeForRegularUsers { get; set; }

    [JsonProperty("allowVolumeBrowserForRegularUsers")]
    public bool AllowVolumeBrowserForRegularUsers { get; set; }

    [JsonProperty("allowHostNamespaceForRegularUsers")]
    public bool AllowHostNamespaceForRegularUsers { get; set; }

    [JsonProperty("allowDeviceMappingForRegularUsers")]
    public bool AllowDeviceMappingForRegularUsers { get; set; }

    [JsonProperty("allowStackManagementForRegularUsers")]
    public bool AllowStackManagementForRegularUsers { get; set; }

    [JsonProperty("allowContainerCapabilitiesForRegularUsers")]
    public bool AllowContainerCapabilitiesForRegularUsers { get; set; }

    [JsonProperty("allowSysctlSettingForRegularUsers")]
    public bool AllowSysctlSettingForRegularUsers { get; set; }

    [JsonProperty("enableHostManagementFeatures")]
    public bool EnableHostManagementFeatures { get; set; }
}

public partial class Snapshot
{
    [JsonProperty("Time")]
    public long Time { get; set; }

    [JsonProperty("DockerVersion")]
    public string DockerVersion { get; set; }

    [JsonProperty("Swarm")]
    public bool Swarm { get; set; }

    [JsonProperty("TotalCPU")]
    public long TotalCpu { get; set; }

    [JsonProperty("TotalMemory")]
    public long TotalMemory { get; set; }

    [JsonProperty("RunningContainerCount")]
    public long RunningContainerCount { get; set; }

    [JsonProperty("StoppedContainerCount")]
    public long StoppedContainerCount { get; set; }

    [JsonProperty("HealthyContainerCount")]
    public long HealthyContainerCount { get; set; }

    [JsonProperty("UnhealthyContainerCount")]
    public long UnhealthyContainerCount { get; set; }

    [JsonProperty("VolumeCount")]
    public long VolumeCount { get; set; }

    [JsonProperty("ImageCount")]
    public long ImageCount { get; set; }

    [JsonProperty("ServiceCount")]
    public long ServiceCount { get; set; }

    [JsonProperty("StackCount")]
    public long StackCount { get; set; }

    [JsonProperty("DockerSnapshotRaw")]
    public DockerSnapshotRaw DockerSnapshotRaw { get; set; }

    [JsonProperty("NodeCount")]
    public long NodeCount { get; set; }
}

public partial class DockerSnapshotRaw
{
    [JsonProperty("Containers")]
    public object Containers { get; set; }

    [JsonProperty("Volumes")]
    public object Volumes { get; set; }

    [JsonProperty("Networks")]
    public object Networks { get; set; }

    [JsonProperty("Images")]
    public object Images { get; set; }

    [JsonProperty("Info")]
    public object Info { get; set; }

    [JsonProperty("Version")]
    public object Version { get; set; }
}

public partial class AccessPolicies { }

public partial class TlsConfig
{
    [JsonProperty("TLS")]
    public bool Tls { get; set; }

    [JsonProperty("TLSSkipVerify")]
    public bool TlsSkipVerify { get; set; }
}

public partial class PortainerHostResponse
{
    public static PortainerHostResponse[]? FromJson(string json) =>
        JsonConvert.DeserializeObject<PortainerHostResponse[]>(
            json,
            PortainerHostResponseConverter.Settings
        );
}

internal static class PortainerHostResponseConverter
{
    public static readonly JsonSerializerSettings Settings =
        new()
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
}
